y_pred = model.predict(X_test)

model.coef_
model.intercept_

X_train_scaled = scaler.fit_transform(X_train)

model.score(X_train, y_train)


model.fit(X_train.reshape(60000,28,28,1),
	y_train,
	epochs = 10,
	batch_size = 1000

)

Conv2d?

model.add(Flatten())

model.compile(optimizer = "rmsprop", loss="categorical_crossentropy", metrics = ["accuracy"])


y_train = to_categorical(y_train)

model.add(Conv2D(30,kernel_size=(3,3), activation = "relu", input_shape = (28,28,1)))


model.layers


result[0].shape


result[0][:,:,0]

model.add(MaxPooling2d(pool_size=(2,2)))

model.evaluate(X_test.reshape(-1,28,28,1), y_test)

model.add(Dropout(0,25))


y_train = y_train == 0

model.add(Dense(100, activation = "sigmoid", input_shape(784,)))


np.mean(np.round(y_train_pred).reshape(-1)==y_train)

ypred = pd.Series(np.argmax(pred,axis=1), name='pred')

pd.crosstab(ytrue,ypred)

np.sum(pred[1])



